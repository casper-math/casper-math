import casper from './../../src/index'

it.each([
    ['53 + 8', '61'],
    ['173 + 6', '179'],
    ['800 + 35', '835'],
    ['12 - 9', '3'],
    ['83 - 7', '76'],
    ['500 - 17', '483'],
    ['64 + 89 + 36', '189'],
    ['17 + 58 + 183', '258'],
    ['600 + 800', '1400'],
    ['5 + 7', '12'],
    ['500 + 700', '1200'],
    ['5000 + 70', '5070'],
    ['23 - 7', '16'],
    ['2300 - 700', '1600'],
    ['2300 - 70', '2230'],
    ['2300 + 700', '3000'],
    ['7500 - 3200', '4300'],
    ['8000 - 111', '7889'],
    ['7 * 4', '28'],
    ['3 * 8', '24'],
    ['5 * 3', '15'],
    ['8 * 4', '32'],
    ['80 * 40', '3200'],
    ['800 * 40', '32000'],
    ['9 * 4', '36'],
    ['700 * 30', '21000'],
    ['400 * 9000', '3600000'],
    ['56 / 8', '7'],
    ['28 / 7', '4'],
    ['24 / 3', '8'],
    ['640 / 8', '80'],
    ['1800 / 600', '3'],
    ['3600 / 60', '60'],
    ['1800 / 90', '20'],
    ['54000 / 60', '900'],
    ['6900 / 3', '2300'],
    ['-8 + -3', '-11'],
    ['-8 + 3', '-5'],
    ['8 + -3', '5'],
    ['-8 - 3', '-11'],
    ['8 - 3', '5'],
    ['-3 - 8', '-11'],
    ['3 + -8', '-5'],
    ['-3 + -8', '-11'],
    ['-3 + 8', '5'],
    ['5 + -1', '4'],
    ['-5 + -6', '-11'],
    ['0 + -8', '-8'],
    ['13 + -21', '-8'],
    ['19 + -19', '0'],
    ['-21 + -21', '-42'],
    ['14 - 23', '-9'],
    ['-43 + -57', '-100'],
    ['-141 + 97', '-44'],
    ['-56 + -56', '-112'],
    ['91 + -117', '-26'],
    ['-83 + -112', '-195'],
    ['-5 + -4 + 13', '4'],
    ['11 + -11 + -12', '-12'],
    ['-6 + -4 + -1', '-11'],
    ['-7 + (9 - 13)', '-11'],
    ['2 - (9 + -7)', '0'],
    ['-3 + (13 + -25)', '-15'],
    ['7 - 5 + -10', '-8'],
    ['-7 + -5 + -10', '-22'],
    ['-25 - (34 + -18)', '-41'],
    ['17 - (45 + -28)', '0'],
    ['35 - (12 + 43)', '-20'],
    ['12 - (-3 + 7)', '8'],
    ['2 - -1', '3'],
    ['-2 - -1', '-1'],
    ['-7 - -20', '13'],
    ['26 - -21', '47'],
    ['-19 - -19', '0'],
    ['0 - -317', '317'],
    ['-7 - -8', '1'],
    ['-7 + -8', '-15'],
    ['-1 + -5', '-6'],
    ['1 - -5', '6'],
    ['-12 + -24', '-36'],
    ['-6 - (-33 + 3)', '24'],
    ['16 + -43 - 3', '-30'],
    ['-23 - (0 + -7)', '-16'],
    ['0 - -23 - 11', '12'],
    ['-7 + -7', '-14'],
    ['-7 - -7', '0'],
    ['7 + -7', '0'],
    ['-5 - -22', '17'],
    ['-59 + -73', '-132'],
    ['-54 + -54 - 54', '-162'],
    ['-8 - (5 - 17)', '4'],
    ['-13 - (-5 - 8)', '0'],
    ['18 - (-7 - -11) + 3', '17'],
    ['7 * -30', '-210'],
    ['8 * -5', '-40'],
    ['-6 * 30', '-180'],
    ['-1 * 12', '-12'],
    ['18 * -1', '-18'],
    ['0 * -300', '0'],
    ['25 * -8', '-200'],
    ['-1 * 1', '-1'],
    ['-15 * 40', '-600'],
    ['-8 * -3', '24'],
    ['-9 * 0', '0'],
    ['12 * -70', '-840'],
    ['-7 * 11', '-77'],
    ['-12 * 5', '-60'],
    ['-99 * 10', '-990'],
    ['18 * -5', '-90'],
    ['-7 * -13', '91'],
    ['-12 * -12', '144'],
    ['101 * -5', '-505'],
    ['-9 * -25', '225'],
    ['-44 * 0', '0'],
    ['2 * 7 * -5', '-70'],
    ['2 * -7 * -5', '70'],
    ['-2 * -7 * -5', '-70'],
    ['-5 * -4 * 3', '60'],
    ['-5 * 4 * 3', '-60'],
    ['-5 * -4 * -3', '-60'],
    ['-16 * -17 * 0 * 8', '0'],
    ['-1 * -1 * -1 * -1 * 1', '1'],
    ['-18 * 0 * 312 * 17', '0'],
    ['-8 - 4', '-12'],
    ['-8 * -4', '32'],
    ['-8 - -4', '-4'],
    ['5 - 7', '-2'],
    ['5 - -7', '12'],
    ['5 * -7', '-35'],
    ['-4 * -12', '48'],
    ['-4 - 12', '-16'],
    ['-4 - -12', '8'],
    ['-48 / 12', '-4'],
    ['27 / -3', '-9'],
    ['52 / -52', '-1'],
    ['-42 / -3', '14'],
    ['-50 / 1', '-50'],
    ['17 / -1', '-17'],
    ['10 / -10', '-1'],
    ['0 / -10', '0'],
    ['-3 / -1', '3'],
    ['-17 / -17', '1']
])('can do arithmetic', (input: string, output: string) => {
    const result = casper().go(input)
    expect(result.result).toBe(output)
})

it.each([
    ['(9 + 6) * 5', '75'],
    ['9 * 6 + 5', '59'],
    ['9 * (6 + 5)', '99'],
    ['8 + 3 * 7 + 2', '31'],
    ['8 + 3 * (7 + 2)', '35'],
    ['(8 + 3) * (7 + 2)', '99'],
    ['20 - 2 * (8 - 4)', '12'],
    ['20 - 2 * 8 + 4', '8'],
    ['(20 - 2) * 8 + 4', '148'],
    ['38 - (3 + 2) * 5', '13'],
    ['(38 - 3) + 2 * 5', '45'],
    ['(38 - (3 + 2)) * 5', '165'],
    ['8 + 7 * 6 - 3', '47'],
    ['32 - (25 - 17) / 4', '30'],
    ['32 - (300 - 50 * 2) + 450', '282'],
    ['420 / 4 - (125 - 117) * 4 + 48 / 12 - 4', '73'],
    ['48 / (8 - 4) * 4 + 48 / (12 - 4)', '54'],
    ['(9 * 6 - 18 - 8 * 3) / 6 + 5 * 3', '17'],
    ['(9 * 6 - (18 - 8) * 3) / 6 + 5 * 3', '19'],
    ['5 - 6 * -3', '23'],
    ['-2 - 8 * -3', '22'],
    ['-6 * (-1 - 8)', '54'],
    ['-6 - 1 - 8', '-15'],
    ['-5 * -1 - 6', '-1'],
    ['-5 - (1 - 6)', '0'],
    ['9 - 5 * -3', '24'],
    ['-3 - 0 * -5 + 6', '3'],
    ['-2 - (5 - 5) * -6', '-2'],
    ['8 - (3 - 5) * -4', '0'],
    ['(8 - 3) * -5 - 4', '-29'],
    ['(-1 - 6) * -1 - 4 * -2', '15'],
    ['11 * -3 - 8 * -4', '-1'],
    ['-2 - 3 * (4 - 5) - 6', '-5'],
    ['-7 - (2 - 5) * -4 + 9', '-10'],
    ['-3 - (3 - 3) * 3 - 3', '-6'],
    ['-3 * -3 * -3 - 3', '-30'],
    ['-3 * -3 - 3 * -3 - 3 * -3', '27'],
    ['(7 + 8) / -5 - 8', '-11'],
    ['18 / -6 - 5 / -1', '2'],
    ['-24 / -6 - 12 / (-4 + 2)', '10'],
    ['(-8 - 2) / -10 - 20 * -0.5', '11'],
    ['18 * -3 / 6 - 8', '-17'],
    ['-2 * 3 / -6 - 1 * -2', '3'],
    ['(25 - 50) / 5 * -10 - 8', '42'],
    ['((8 - 10) / -2 + 5) / 3', '2']
])('respects the order of operations', (input: string, output: string) => {
    const result = casper().go(input)
    expect(result.result).toBe(output)
})

it.each([
    ['15 / 25', '3 / 5'],
    ['15 / 27', '5 / 9'],
    ['18 / 36', '1 / 2'],
    ['28 / 35', '4 / 5'],
    ['20 / 100', '1 / 5'],
    ['56 / 40', '7 / 5'],
    ['35 / 90', '7 / 18'],
    ['60 / 12', '5'],
    ['32 / 32', '1'],
    ['24 / 42', '4 / 7'],
    ['27 / 15', '9 / 5'],
    ['32 / 12', '8 / 3'],
    ['1 / 2 + 1 / 3', '5 / 6'],
    ['1 / 2 + 1 / 4', '3 / 4'],
    ['3 / 4 - 1 / 3', '5 / 12'],
    ['(1 + 1 / 2) - 1 / 4', '5 / 4'],
    ['(2 + 1 / 3) + (1 + 1 / 4)', '43 / 12'],
    ['3 / 10 - 1 / 5', '1 / 10'],
    ['4 - (1 + 2 / 3)', '7 / 3'],
    ['(5 + 3 / 10) + (1 + 1 / 4)', '131 / 20'],
    ['(5 + 3 / 4) - (1 + 1 / 12)', '14 / 3'],
    ['3 / 7 + 5 / 8', '59 / 56'],
    ['(1 + 5 / 8) - 5 / 12', '29 / 24'],
    ['7 / 8 - 8 / 64', '3 / 4'],
    ['3 / 5 + 2 / 3 + 1 / 6', '43 / 30'],
    ['(2 + 1 / 5) - 3 / 4 + 7 / 10', '43 / 20'],
    ['(3 + 2 / 5) - (3 / 10 + (1 + 1 / 4))', '37 / 20'],
    ['(5 / 8) * (3 / 7)', '15 / 56'],
    ['(1 / 4) * (5 / 6)', '5 / 24'],
    ['(2 / 9) * (1 + 2 / 5)', '14 / 45'],
    ['(1 + 1 / 3) * (1 + 2 / 5)', '28 / 15'],
    ['3 * (2 / 9)', '2 / 3'],
    ['(1 + 1 / 4) * (1 + 2 / 5)', '7 / 4'],
    ['(1 / 5) * 15', '3'],
    ['(3 / 5) * 15', '9'],
    ['(2 / 3) * 45', '30'],
    ['(3 / 4) * 80', '60'],
    ['(9 / 10) * 2000', '1800'],
    ['(1 / 4) * 10', '5 / 2'],
    ['(3 / 8) * (2 / 7)', '3 / 28'],
    ['3 / 8 + 2 / 7', '37 / 56'],
    ['(3 / 10) * (1 / 5)', '3 / 50'],
    ['3 / 10 + 1 / 5', '1 / 2'],
    ['(1 + 3 / 4) * (2 / 5)', '7 / 10'],
    ['(1 + 3 / 4) + 2 / 5', '43 / 20'],
    ['(2 + 1 / 4) * (2 + 2 / 5)', '27 / 5'],
    ['(2 + 1 / 4) + (2 + 2 / 5)', '93 / 20'],
    ['1 / 2 + (3 / 4) * (3 / 5)', '19 / 20'],
    ['1 / 4 + (1 + 3 / 4) * (3 / 7)', '1'],
    ['(1 - 1 / 3) * (1 + 1 / 2)', '1'],
    ['(1 + 3 / 5) - (1 / 2) * (1 / 5)', '3 / 2'],
    ['(1 + 2 / 3) + (3 / 4) * (3 / 5)', '127 / 60'],
    ['(2 + 2 / 3) + (1 + 1 / 2) * (5 / 9)', '7 / 2'],
    ['((2 + 1 / 4) - 1 / 3) * (12 / 23)', '1'],
    ['5 - (3 / 8) * (1 + 1 / 3)', '9 / 2'],
    ['4 + (1 / 3) * (3 / 4)', '17 / 4'],
    ['4 * (1 / 3) * (3 / 4)', '1'],
    ['(1 + 1 / 5) * 6000', '7200'],
    ['(1 + 5 / 7) * (7 / 10) - (1 / 5)', '1'],
    ['200 * (2 + 1 / 2)', '500'],
    ['(4 + 1 / 2) + -6', '-3 / 2'],
    ['-(5 + 1 / 4) + -(2 + 3 / 4)', '-8'],
    ['-2 / 3 - (3 + 1 / 3)', '-4'],
    ['(17 + 1 / 4) - ((45 + 1 / 2) + -28)', '-1 / 4'],
    ['(13 + 1 / 2) - ((10 + 3 / 4) + (5 + 1 / 4))', '-5 / 2'],
    ['-(2 + 2 / 5) - ((1 + 3 / 5) - (4 / 5 - 1 / 5))', '-17 / 5'],
    ['-(6 + 1 / 3) + -(2 + 2 / 3)', '-9'],
    ['(3 + 1 / 4) + -(7 + 1 / 2)', '-17 / 4'],
    ['-(5 + 1 / 4) + -(7 + 1 / 2)', '-51 / 4'],
    ['-(2 + 1 / 2) + -(1 + 1 / 4) + 1 / 2', '-13 / 4'],
    ['2 / 3 - (-(2 + 1 / 3) + -1 / 3)', '10 / 3'],
    ['-(8 + 1 / 4) - ((3 + 3 / 4) - (8 + 1 / 2))', '-7 / 2'],
    ['-18 / 9', '-2'],
    ['-21 / -1', '21'],
    ['-81 / -9', '9'],
    ['0 / -3', '0'],
    ['-21 / 21', '-1'],
    ['27 / -9', '-3'],
    ['(-18 - 6) / (-4 * 3)', '2'],
    ['(3 * -8) / (2 - 6)', '6'],
    ['(-18 - 12) / 2 * -5', '75'],
    ['0 / -3 - (2 - 8) * 3', '18'],
    ['15 / -3 - 8 * -2 + 3', '14'],
    ['15 / -15 + -21 / -3 - 7 * -1', '13'],
    ['(-21 - -12) / (10 - 1) + 9 / -9', '-2'],
    ['5 * (8 - 29) / -7 - (24 / -6 - 8) * 3', '51'],
    ['(8 * 8) / (8 * 8)', '1'],
    ['(-8 - 8) / (8 + 8)', '-1'],
    ['(8 * 8) / (8 + 8)', '4'],
    ['-8 / 8 - 8 / -8', '0'],
    ['(8 - 8) / (-8 - 8)', '0'],
    ['(8 + 8) / (-8 / 8)', '-16'],
    ['-12 / 18', '-2 / 3'],
    ['-5 / -1', '5'],
    ['30  / -12', '-5 / 2'],
    ['-2 / 3', '-2 / 3'],
    ['-21 / -14', '3 / 2'],
    ['-125 / -15', '25 / 3'],
    ['27 / -9', '-3'],
    ['11 / -99', '-1 / 9'],
    ['-72 / 60', '-6 / 5'],
    ['72 / -90', '-4 / 5'],
    ['-3 / 9', '-1 / 3'],
    ['-120 / -4', '30'],
    ['-5 / 12 + 7 / 12', '1 / 6'],
    ['-2 / 9 - 4 / 9', '-2 / 3'],
    ['3 / 5 - 4', '-17 / 5'],
    ['-2 / 9 + 3 / 5', '17 / 45'],
    ['-1 / 3 - 2 / 7', '-13 / 21'],
    ['3 / 4 - 8 / 9', '-5 / 36'],
    ['3 / 4 - 1 / 12', '2 / 3'],
    ['-(1 + 2 / 5) + 3', '8 / 5'],
    ['-(3 + 5 / 6) - 3 / 4', '-55 / 12'],
    ['1 / 11 - (1 + 2 / 10)', '-61 / 55'],
    ['3 / 10 - 5 / 8', '-13 / 40'],
    ['-3 / 5 - 3 / 10', '-9 / 10'],
    ['-(1 + 3 / 5) + (3 + 4 / 5)', '11 / 5'],
    ['(1 + 2 / 3) - (3 + 1 / 3)', '-5 / 3'],
    ['2 / 3 - 5', '-13 / 3'],
    ['-4 - (3 + 1 / 2)', '-15 / 2'],
    ['-(1 + 1 / 6) + (2 + 2 / 3)', '3 / 2'],
    ['-(2 + 1 / 3) - 1 / 9', '-22 / 9'],
    ['(-2 / 3) * (5 / 11)', '-10 / 33'],
    ['(-2 / 5) * (-3 / 4)', '3 / 10'],
    ['(1 + 2 / 3) * (-1 / 5)', '-1 / 3'],
    ['-(1 + 1 / 5) * (3 + 1 / 3)', '-4'],
    ['(-3 / 7) * -(2 + 1 / 3)', '1'],
    ['-5 * -(2 / 11)', '10 / 11'],
    ['-5 / 7 - 2 / 3', '-29 / 21'],
    ['(-5 / 7) * (-2 / 3)', '10 / 21'],
    ['3 / 4 - 2 / 7 - 1 / 2', '-1 / 28'],
    ['(3 / 4) * (-2 / 7) * (-1 / 2)', '3 / 28'],
    ['-(2 + 1 / 3) - (3 + 2 / 5)', '-86 / 15'],
    ['-(2 + 1 / 3) * -(3 + 2 / 5)', '119 / 15'],
    ['-2 / 3 + (1 + 2 / 5) * -(2 + 6 / 7)', '-14 / 3'],
    ['(1 / 3) * (-3 / 4) + (1 / 2) * (1 + 1 / 6)', '1 / 3'],
    ['5 * (-3 / 7) - (1 + 1 / 3) * (3 / 4)', '-22 / 7']
])('can do arithmetic with fractions', (input: string, output: string) => {
    const result = casper().go(input)
    expect(result.result).toBe(output)
})

it.each([
    ['5 * 4^2', '80'],
    ['5^2 * 4', '100'],
    ['5^2 - 4^2', '9'],
    ['8^2 - 16 * (1 / 2)^2', '60'],
    ['(8 - 3)^2 * 5', '125'],
    ['6^2 / 9', '4'],
    ['((3 / 4) * 8)^2', '36'],
    ['1^2 + (3 / 4)^2 + (1 + 1 / 2)^2', '61 / 16'],
    ['(1 + 1 / 8) / (1 / 4)^2', '18'],
    ['3 + 4^2 * 3', '51'],
    ['(4 + 2)^2 * (1 / 3)^2', '4'],
    ['3 - (5 - 2)^2 / 3', '0'],
    ['(17 + 3)^2 / 80 - 40', '-35'],
    ['- (1 / 6) - (5 / 9 + (2 / 3)^2) * (1 / 2)^2', '-5 / 12'],
    ['(1 / 5 + 3 / 10)^2 - (1 / 2)^2', '0'],
    ['(-9)^2', '81'],
    ['-11^2', '-121'],
    ['13^2', '169'],
    ['-(-13)^2', '-169'],
    ['(-15)^2', '225'],
    ['(-1 / 6)^2', '1 / 36'],
    ['6^2 + (-3)^2', '45'],
    ['3 * -5^2', '-75'],
    ['-3 * (-5)^2', '-75'],
    ['8^2 - 1^2', '63'],
    ['-7^2 + 3 * 4^2', '-1'],
    ['-(-1 / 4)^2 + (1 / 2) * (1 / 4)', '1 / 16'],
    ['-5 * -8^2', '320'],
    ['5 - 8^2', '-59'],
    ['5 * (-8)^2', '320'],
    ['(5 * -8)^2', '1600'],
    ['-(5 - 8)^2', '-9'],
    ['-5 - (-8)^2', '-69'],
    ['-5^2 + 8 * 3^2', '47'],
    ['(-8)^2 / 4^2', '4'],
    ['18 / (-(1 / 3)^2)', '-162'],
    ['5 / 18 - (-1 / 3)^2', '1 / 6'],
    ['-(-8)^2 + 4 * -3^2', '-100'],
    ['-1 - 5 * (-2 / 5)^2', '-9 / 5']
])('can compute powers and roots', (input: string, output: string) => {
    const result = casper().go(input)
    expect(result.result).toBe(output)
})
